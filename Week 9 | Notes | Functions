--------------------------
Functions
--------------------------

Function 


                - is a named group of code statements that accomplish something together, a bit like a factory machine.


--------------------------
Built-in Functions
--------------------------


#include <cmath>


                - We gain the power to call math funtions.


Example:

                        std::cout << sqrt(9) << "\n";

                        //This would output 3


Example 2:


                        #include <iostream>
                        #include <cmath>

                        int main() {

                          // This seeds the random number generator:
                          srand (time(NULL));

                          // Use rand() below to initialize the_amazing_random_number
                          int the_amazing_random_number = rand() % 29;

                          std::cout << the_amazing_random_number;

                        }



-----------------------
Declare & Define
-----------------------

Declaration

                - This includes the function's name, what the return type is, and any
                parameters (if the function will accept input values, known as arguments).


Definition

                - Also known as the body of the function, this contains the instructions
                for what the function is supposed to do.


--------------------------------
Void - The Point of No Return
--------------------------------

Void Function


                - is also known as a subroutine, has no return value, making it ideally
                suited for situations where you just want to print stuff to the terminal.


Example:

                        void animal_chat() {

                         std::string fav, pet;

                         std::cout << "What's your favorite animal?\n";
                         std::cin >> fav;

                         std::cout << "Do you have a " << fav << " as a pet? y/n\n";
                         std::cin >> pet;

                          if (pet == "y") {

                            std::cout << "How lucky you have a " << fav << " as a pet!\n";

                          } else {

                            std::cout << "That's too bad.\n";

                          }

                        }


Example 2:

                        #include <iostream>

                        // Define oscar_wilde_quote() below:
                        void oscar_wilde_quote(){

                          std::cout << "The highest, as the lowest, form of criticism is a mode of autobiography." << "\n";

                        }

                        int main() {

                          // Call your function here:
                          oscar_wilde_quote();

                        }



--------------------------------
Return Types - Beyond the Void
--------------------------------


                - A function can return most data types we've covered, including double, int,
                bool, char, std::string, and std::vector.


Example:


                        std::string always_blue() {

                          return "blue!\n";

                        }


-----------------------------
How Return Values Work
-----------------------------


                - There must be a value returned from the function.

                - The return value must be the same type as the function's
                return type.


Example:


                std::string feed_the_cat() {

                  return "Cat is fed!";

                }



                int main() {

                  std::string cat_message = feed_the_cat();
                  std::cout << cat_message;

                }



-------------------------
Parameters & Arguments
-------------------------

Parameters 

        
                - are variabls used in a function's definition. They act as placeholders for the input
                values you'll use during your function call.
                
                
Example:


                        int do_something (int num){
                        
                        //stuff happens
                        
                        }


                        int main(){
                        
                        do_something(5);
                        
                        }


Example 2:


                        #include <iostream>
                        #include <string>

                        // Define get_emergency_number() below:
                        void get_emergency_number(std::string emergency_number){


                          std::cout << "Dial " << emergency_number << " ";


                        }


                        int main() {

                          // Original emergency services number 
                          std::string old_emergency_number = "999";

                          // For nicer ambulances, faster response times
                          // and better-looking drivers
                          std::string new_emergency_number = "0118 999 881 999 119 725 3";

                          // Call get_emergency_number() below with
                          // the number you want!
                          get_emergency_number(new_emergency_number);

                        }



----------------------------
Tackling Multiple Arguments
----------------------------


                - We can add as many function as we like, but we will have to remember their order
                when you call the function. 
                
                
Example:


                        double get_tip(double price, double tip, bool total_included) {
 
                          if (total_included) {

                            return price * tip + price;

                          } else {

                            return price * tip;

                          }

                        }



                        int main(){
                        
                        get_tip(45.50, 0.25, true);
                        // this code results in 56.875, which you could round up to 56.88
                                                
                        }


Example 2:


                        #include <iostream>
                        #include <string>

                        // Define name_x_times() below:
                        void name_x_times(std::string name, int x){

                          while (x > 0){

                            std::cout << name << "";
                            x--;

                          }

                        }

                        int main() {

                          std::string my_name = "Raymon ";
                          int some_number = 5; // Change this if you like!
                          // Call name_x_times() below with my_name and some_number
                          name_x_times(my_name, some_number);

                        }


--------------------------------
How Parameters & Arguments Work
--------------------------------


                - The function call must include the same number of arguments as there are parameters.
                
                - The corresponding arguments must be passed in the same order. 
                
                





































